name: "MLOps workflow - Build Image and Deploy"

on:
  # start de workflow nadat er een model is gebouwd
  workflow_run:
    workflows: ["MLOps workflow - Train Model"]
    types: [completed]
  # maak handmatig starten van de workflow ook mogelijk
  workflow_dispatch:

jobs:
  # build de docker image, zet de image in ACR en deploy daarna in ACI
  build_image_and_deploy:
    name: 'Build the docker image and deploy it to Azure'
    runs-on: ubuntu-latest

    steps:
      # checkout de code naar de Github workspace
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v3

      # log in bij Azure Cloud
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # build en push de docker image naar Azure Container Registry
      - name: 'Build and push image'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - run: |
          docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/containerpoc:${{ github.sha }}
          docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/containerpoc:${{ github.sha }}

      # deploy the docker image vanuit de Azure Container Registry naar Azure Container Instances
      - name: 'Deploy to Azure Container Instances'
        uses: 'azure/aci-deploy@v1'
        with:
          resource-group: ${{ secrets.RESOURCE_GROUP }}
          dns-name-label: ${{ secrets.RESOURCE_GROUP }}${{ github.run_number }}
          image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/containerpoc:${{ github.sha }}
          registry-login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          registry-username: ${{ secrets.REGISTRY_USERNAME }}
          registry-password: ${{ secrets.REGISTRY_PASSWORD }}
          name: aci-containerpoc
          location: 'west europe'
          ports: 80 8000